/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Principal;
//import Camara.MiWebcam;
import Datos.DAlumnos;
import Logica.Lalumnos;
import conexion.Conexion;
//import Datos.DAlumnos;
//import Logica.Lalumnos;
import com.mysql.jdbc.PreparedStatement;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USUARIO
 */
public final class FrmNuevoAlumno extends javax.swing.JInternalFrame {

    boolean colocarImagen=false;
           DAlumnos da=new DAlumnos();
       public static Conexion cc = new Conexion();
       Connection cn = cc.conectar();
       String operacion;
       boolean validar=true;
       boolean validarCorreo;
       boolean teclado=false;
       File ruta;
       
      // DAlumnos da=new DAlumnos();      
      int cNoControl=0,contadorCamara=0;
       String patronEmail = "^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@" +
      "[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,4})$";
    /**
     * Creates new form NuevoAlumno
     */
    public FrmNuevoAlumno() {
        initComponents();
        obtenerCarreras();
        comboCarrera.setSelectedIndex(-1);
        obtenerDependencias();
        comboPlantel.setSelectedIndex(-1);
        mostrarAlumnos();
        deshabilitar();
        lblId.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtNoControl = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApaterno = new javax.swing.JTextField();
        txtAmaterno = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        comboCarrera = new javax.swing.JComboBox<>();
        btnEditar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        comboPlantel = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblConsultar = new javax.swing.JTable();
        comboBuscar = new javax.swing.JComboBox<>();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        comboSexo = new javax.swing.JComboBox<>();
        lblId = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Nuevo Alumno");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/alumno.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(964, 660));

        jPanel2.setBackground(new java.awt.Color(255, 153, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Apellido Paterno:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Apellido Materno:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Sexo:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("No. de Control:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Carrera:");

        txtNoControl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNoControlKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNoControlKeyTyped(evt);
            }
        });

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
        });

        txtApaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApaternoKeyReleased(evt);
            }
        });

        txtAmaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAmaternoKeyReleased(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        comboCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCarreraActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Dependencia:");

        comboPlantel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPlantelActionPerformed(evt);
            }
        });

        tblConsultar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "idAlumno", "No. control", "Nombre", "Sexo", "Carrera", "Dependencia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblConsultar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblConsultarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblConsultar);
        if (tblConsultar.getColumnModel().getColumnCount() > 0) {
            tblConsultar.getColumnModel().getColumn(3).setResizable(false);
        }

        comboBuscar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Buscar por No.Control:", "Buscar por Nombre:", "Buscar por Carrera:" }));

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotal.setPreferredSize(new java.awt.Dimension(85, 14));

        comboSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hombre", "Mujer" }));
        comboSexo.setSelectedIndex(-1);
        comboSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSexoActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(comboBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(116, 116, 116)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNoControl, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtApaterno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboPlantel, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAmaterno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboCarrera, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(199, 199, 199)
                                .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 865, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNoControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAmaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboPlantel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar)
                    .addComponent(btnEditar)
                    .addComponent(btnLimpiar)
                    .addComponent(btnNuevo))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 8, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNoControlKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoControlKeyReleased
        int k=(int) evt.getKeyChar();
        System.out.println(k);
        if(k==8){
            cNoControl=cNoControl-1;
        }
        else if(k==32){
            JOptionPane.showMessageDialog(null,"No se permiten Espacios en este Campo","Error",JOptionPane.ERROR_MESSAGE);
            txtNoControl.setText("");
            cNoControl=0;
        }

        else if(k>32 && k < 48 || k>57 && k<65 || k>90 && k< 97 || k>122 && k<164 || k>165){

            JOptionPane.showMessageDialog(null,"No se permiten Estos Caracteres en este Campo \n (*,@,/,_,. ...etc.)","Error",JOptionPane.ERROR_MESSAGE);
            txtNoControl.setText("");
            cNoControl=0;
        }else{
            if(k!=10){  
            cNoControl=cNoControl+1;
            
         
            }
            if(cNoControl >8){

                JOptionPane.showMessageDialog(null,"Numero de control no debe superar los 8 caracteres","Error",JOptionPane.ERROR_MESSAGE);
                txtNoControl.setText("");
                cNoControl=0;
            }
        }
    }//GEN-LAST:event_txtNoControlKeyReleased

    private void txtNoControlKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoControlKeyTyped

        char keyChar = evt.getKeyChar();
        if (Character.isLowerCase(keyChar)) {
            evt.setKeyChar(Character.toUpperCase(keyChar));

        }
    }//GEN-LAST:event_txtNoControlKeyTyped

    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        int k=(int) evt.getKeyChar();

        if(k==65535){

        }
        else if(k>0 && k<7 || k>10 && k<32 || k>32 && k<65 || k>90 && k<97 || k>122 && k>164 || k>255 && k<165){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"No se pueden introducir numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtNombre.setText("");

        }

        if(txtNombre.getText().length()>=31){
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Ha exedido el numero de caracteres(30)","Error",JOptionPane.ERROR_MESSAGE);
            txtNombre.setText("");
        }
    }//GEN-LAST:event_txtNombreKeyReleased

    private void txtApaternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApaternoKeyReleased
        int k=(int) evt.getKeyChar();
        if(k==65535){

        }
        else if(k>0 && k<7 || k>10 && k<32 || k>32 && k<65 || k>90 && k<97 || k>122 && k>164 || k>255 && k<165){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"No se pueden introducir numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtApaterno.setText("");

        }

        if(txtApaterno.getText().length()>=31){
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Ha exedido el numero de caracteres(30)","Error",JOptionPane.ERROR_MESSAGE);
            txtApaterno.setText("");
        }
    }//GEN-LAST:event_txtApaternoKeyReleased

    private void txtAmaternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmaternoKeyReleased

        int k=(int) evt.getKeyChar();

        if(k==65535){

        }
        else if(k>0 && k<7 || k>10 && k<32 || k>32 && k<65 || k>90 && k<97 || k>122 && k>164 || k>255 && k<165){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"No se pueden introducir numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtAmaterno.setText("");

        }

        if(txtAmaterno.getText().length()>=31){
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Ha exedido el numero de caracteres(30)","Error",JOptionPane.ERROR_MESSAGE);
            txtAmaterno.setText("");
        }
    }//GEN-LAST:event_txtAmaternoKeyReleased

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
       
        if(operacion.equals("editar")){
           Lalumnos a=new Lalumnos();
        validarConsultas();
        if(validar){ 
        String dependencia=comboPlantel.getSelectedItem().toString();
        String carrera=comboCarrera.getSelectedItem().toString();
        String nombreCompleto=txtNombre.getText()+" "+txtApaterno.getText()+" "+txtAmaterno.getText();
        String sexo=comboSexo.getSelectedItem().toString();
        int carreraId=seleccionCarreras(carrera);
        int dependenciaId=seleccionDependencia(dependencia);
        a.setAlumnoId(Integer.parseInt(lblId.getText()));
        a.setNoControl(txtNoControl.getText());
        a.setNombre(txtNombre.getText());
        a.setaPaterno(txtApaterno.getText());
        a.setaMaterno(txtAmaterno.getText());
        a.setNombreCompleto(nombreCompleto);
        a.setSexo(sexo);
        a.setCarreraId(carreraId);
        a.setDependenciaId(dependenciaId);
        da.EditarAlumno(a);            
        mostrarAlumnos();
        deshabilitar();
        
        }else{
        JOptionPane.showMessageDialog(null, "Favor de verificar los datos","Error",JOptionPane.ERROR_MESSAGE);
        validar=true;
        validarCorreo=true;
        } 
     
            }else{
        
        if(validarCampos()==0){
            String dependencia=comboPlantel.getSelectedItem().toString();
            String carrera=comboCarrera.getSelectedItem().toString();
            int carreraId=seleccionCarreras(carrera);
            int dependenciaId=seleccionDependencia(dependencia);
            String nControl=txtNoControl.getText();
            String nombreCompleto=txtNombre.getText()+" "+txtApaterno.getText()+" "+txtAmaterno.getText();
            String sexo=comboSexo.getSelectedItem().toString();
            Lalumnos u=new Lalumnos();
            u.setAlumnoId(0);
            u.setNoControl(nControl);
            u.setNombre(txtNombre.getText());
            u.setaPaterno(txtApaterno.getText());
            u.setaMaterno(txtAmaterno.getText());
            u.setNombreCompleto(nombreCompleto);
            u.setSexo(sexo);
            u.setCarreraId(carreraId);
            u.setDependenciaId(dependenciaId);
            boolean r=da.agregarAlumno(u);
           
            if(r){
                limpiar();
                mostrarAlumnos();
                deshabilitar();
            }
        }
        }
        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
    limpiar();
    deshabilitar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        operacion="nuevo";
        limpiar();
        habilitar();
        btnEditar.setEnabled(false);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void comboCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCarreraActionPerformed

    }//GEN-LAST:event_comboCarreraActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
     operacion="editar";
     if(!txtNoControl.getText().equals("")){
     habilitar();  
    }        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
    limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void comboPlantelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPlantelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPlantelActionPerformed

    private void tblConsultarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblConsultarMouseClicked

        int fila = tblConsultar.rowAtPoint(evt.getPoint());
        lblId.setText(tblConsultar.getValueAt(fila,0).toString());
        ResultSet rs=da.visualizarAlumno(tblConsultar.getValueAt(fila,0).toString());
        String datos[]=new String[10];
        String foto;
        try{
            if(rs.next()){

                txtNoControl.setText(rs.getString("noControl"));
                txtNombre.setText(rs.getString("nombre"));
                txtApaterno.setText(rs.getString("apellidoP"));
                txtAmaterno.setText(rs.getString("apellidoM"));
                if("Hombre".equals(rs.getString("sexo"))){
                comboSexo.setSelectedIndex(0);
                }else{
                comboSexo.setSelectedIndex(1);
                }
                obtenerCarreras(rs.getString("nombreCarrera")); 
                obtenerDependencias(rs.getString("nombreCampus")); 
            }
        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_tblConsultarMouseClicked

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
     /*   if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(!txtBuscar.getText().equals("")){
                buscar();
            }else{
                mostrarAlumnos();
            }
        } */
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
 
        if(!txtBuscar.getText().equals("")){
            buscar();
        }else{
            mostrarAlumnos();
        }
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        if(comboBuscar.getSelectedItem().toString().equals("Buscar por No.Control:") ||comboBuscar.getSelectedItem().toString().equals("Buscar por Carrera:") ){
            char keyChar = evt.getKeyChar();
            if (Character.isLowerCase(keyChar)) {
                evt.setKeyChar(Character.toUpperCase(keyChar));
            }
        }
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
    /*    if(!txtBuscar.getText().equals("")){
            buscar();
        }else{
            mostrarAlumnos();
        }*/
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        mostrarAlumnos();
        limpiar();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void comboSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSexoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboSexoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
     int i=JOptionPane.showConfirmDialog(null,"Desea eliminar a este alumno?","Confirmación",JOptionPane.WARNING_MESSAGE);
        
        if(i==JOptionPane.YES_OPTION){
        da.bajaAlumno(lblId.getText());
        limpiar();
        mostrarAlumnos();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed
 
    
 public int validarCampos(){
     int contador=0;
    try{
    String noControl=txtNoControl.getText();
    String sql="SELECT idAlumno FROM alumno WHERE noControl="+'"'+noControl+'"';
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
            
            if(rst.next()){
                int estado=rst.getInt("estadoAlumno");
               if(estado!=0){
                JOptionPane.showMessageDialog(null, "El Alumno ya se encuentra Registrado!", "ERROR", JOptionPane.ERROR_MESSAGE);
            limpiar();
            contador++;
    } else{
                
    if(txtNoControl.getText().trim().compareTo("")==0){
    
    JOptionPane.showMessageDialog(null, "Ingrese un Numero de Control Valido", "Advertencia", JOptionPane.ERROR_MESSAGE);
     contador++;                   
    }
    
               
            }
            
    if(txtNombre.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "El campo Nombre esta Vacío", "Advertencia", JOptionPane.ERROR_MESSAGE);
     contador++;                   
    }
    if(txtApaterno.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "El campo Apellido Paterno esta Vacío", "Advertencia", JOptionPane.ERROR_MESSAGE);
     contador++;                   
    }
    if(txtAmaterno.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "El campo Apellido Materno esta Vacío", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }    
    
    if(comboPlantel.getSelectedItem().toString().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "No ha seleccionado el plantel del alumno", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
    
    if(comboCarrera.getSelectedItem().toString().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "No ha seleccionado una Carrera", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
    if(comboPlantel.getSelectedItem().toString().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "No ha seleccionado el plantel del alumno", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
            
            
            }
    }catch(SQLException e){
    JOptionPane.showMessageDialog(null, "Error al Validar Existencia del Alumno", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
   
       
   
    return contador;
    }
    public static String encodeToString(BufferedImage image) {
       
       return "holixD";
    }
    //Metodo que implementa la busqueda al escribir sobre txtBuscar
    public void buscar(){
       
       String atributo=txtBuscar.getText();
       String consulta=extraerCombo();
       DefaultTableModel modelo=da.consultar(consulta, atributo);
       tblConsultar.setModel(modelo);
       lblTotal.setText("Se encontraron: "+Integer.toString(da.getTotalRegistros())+" resultados");
        
    }
    
    //Metodo que nos permite extraer el atributo a consultar el comboBuscar:
    public String extraerCombo(){
    String consulta=null,combo;
    
    combo=comboBuscar.getSelectedItem().toString();
    
    if(combo.equals("Buscar por No.Control:")){
    consulta="noControl";
    }    
    if(combo.equals("Buscar por Nombre:")){
     consulta="nombreCompleto";   
    }
    if(combo.equals("Buscar por Carrera:")){
    consulta="nombreCarrera";
    }
    return consulta;
    }
    
    public int generarIdAlumno(String noControl){
    int idAlumno=0;
    try{
            String sql="SELECT idAlumno FROM alumnos WHERE noControl='"+noControl+"'";
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
               
            while(rst.next()){
            
            idAlumno=rst.getInt("idAlumno");
                  
            }      
         
        }catch(SQLException e){
        JOptionPane.showMessageDialog(null,"Error al Consultar idAlumno en la Base de Datos"+e,"ERROR"+e,JOptionPane.ERROR_MESSAGE);
        }
    return idAlumno;
    }
    
    
    public void limpiar(){
        txtNoControl.setText("");
        txtNombre.setText("");
        txtApaterno.setText("");
        txtAmaterno.setText("");
            
        comboPlantel.setSelectedIndex(-1);
        comboPlantel.setSelectedItem(-1);
         comboSexo.setSelectedIndex(-1);
        comboSexo.setSelectedItem(-1);
        comboCarrera.setSelectedIndex(-1);
        comboCarrera.setSelectedItem(-1);
        txtNoControl.requestFocusInWindow(); 

        
    }
    
     public void validarConsultas(){
       
         if(txtNoControl.getText().trim().compareTo("")==0){
             
             JOptionPane.showMessageDialog(null, "Ingrese un Numero de Control Valido", "Advertencia", JOptionPane.ERROR_MESSAGE);
             validar=false;
         }
         if(txtNombre.getText().trim().compareTo("")==0){
             
             JOptionPane.showMessageDialog(null, "El campo Nombre esta Vacío", "Advertencia", JOptionPane.ERROR_MESSAGE);
             validar=false;
         }
         if(txtApaterno.getText().trim().compareTo("")==0){
             
             JOptionPane.showMessageDialog(null, "El campo Apellido Paterno esta Vacío", "Advertencia", JOptionPane.ERROR_MESSAGE);
             validar=false;
         }
         if(txtAmaterno.getText().trim().compareTo("")==0){
             
             JOptionPane.showMessageDialog(null, "El campo Apellido Materno esta Vacío", "Advertencia", JOptionPane.ERROR_MESSAGE);
             validar=false;
         }
         if(comboPlantel.getSelectedItem().toString().trim().compareTo("")==0){
             
             JOptionPane.showMessageDialog(null, "No ha seleccionado el plantel del alumno", "Advertencia", JOptionPane.ERROR_MESSAGE);
             validar=false;
         }
         if(comboCarrera.getSelectedItem().toString().trim().compareTo("")==0){
             
             JOptionPane.showMessageDialog(null, "No ha seleccionado una Carrera", "Advertencia", JOptionPane.ERROR_MESSAGE);
             validar=false;
         }
         if(comboPlantel.getSelectedItem().toString().trim().compareTo("")==0){
             
             JOptionPane.showMessageDialog(null, "No ha seleccionado el plantel del alumno", "Advertencia", JOptionPane.ERROR_MESSAGE);
             validar=false;
         }
   
       
   
    
    }
    
    public void mostrarAlumnos(){
          
    DefaultTableModel modelo=da.mostrarAlumnos();
    lblTotal.setText("Se encontraron: "+Integer.toString(da.getTotalRegistros())+" resultados");
    tblConsultar.setModel(modelo);
    BufferedImage img = null;      
    
    }
   
    public void deshabilitar(){
    txtNoControl.setEnabled(false);
    txtNombre.setEnabled(false);
    txtApaterno.setEnabled(false);
    txtAmaterno.setEnabled(false);
    comboSexo.setEnabled(false);
    comboCarrera.setEnabled(false);
    comboPlantel.setEnabled(false);
    btnGuardar.setEnabled(false);
    btnCancelar.setEnabled(false);
    btnEditar.setEnabled(true);
    }
    public void habilitar(){
    txtNoControl.setEnabled(true);
    txtNombre.setEnabled(true);
    txtApaterno.setEnabled(true);
    txtAmaterno.setEnabled(true);
    comboSexo.setEnabled(true);
    comboPlantel.setEnabled(true);
    comboCarrera.setEnabled(true);
    btnGuardar.setEnabled(true);
    btnCancelar.setEnabled(true);
    }
    
    public void obtenerCarreras(String nombreCarrera){
             
        
        try{
            
            DefaultComboBoxModel modelo=new DefaultComboBoxModel();  
            String datos[]=new String[1];
            String sql="SELECT nombreCarrera FROM carrera WHERE nombreCarrera='"+nombreCarrera+"'";
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
            
            
            while(rst.next()){
            
            datos[0]=rst.getString("nombreCarrera");
            modelo.addElement(datos[0]);
           
            }
            
            sql="SELECT nombreCarrera FROM carrera WHERE nombreCarrera!='"+nombreCarrera+"'";
            PreparedStatement pst2= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst2 = pst2.executeQuery();
            while(rst2.next()){
            datos[0]=rst2.getString("nombreCarrera");
            modelo.addElement(datos[0]);
            }
            comboCarrera.setModel(modelo);
            
        }catch(SQLException e){
        JOptionPane.showMessageDialog(null,"Error al Consultar la Base de Datos","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    

    }
    
    
     public void obtenerCarreras(){
             
        
        try{
            
            DefaultComboBoxModel modelo=new DefaultComboBoxModel();  
            String datos[]=new String[1];
            String sql="SELECT nombreCarrera FROM carrera";
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
            
            
            while(rst.next()){
            
            datos[0]=rst.getString("nombreCarrera");
            modelo.addElement(datos[0]);
           
            }
            
            comboCarrera.setModel(modelo);
            
        }catch(SQLException e){
        JOptionPane.showMessageDialog(null,"Error al Consultar la Base de Datos","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    

    }
     
    public int seleccionCarreras(String nombreCarrera){
       
        int idCarrera=0;
                
        try{
            String sql="SELECT idCarrera FROM carrera WHERE nombreCarrera='"+nombreCarrera+"'";
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
               
            while(rst.next()){
            
            idCarrera=rst.getInt("idCarrera");
                  
            }      
         
        }catch(SQLException e){
        JOptionPane.showMessageDialog(null,"Error al Consultar idCarrera en la Base de Datos","ERROR"+e,JOptionPane.ERROR_MESSAGE);
        }
    return idCarrera;

    } 
   public int seleccionDependencia(String nombreDependencia){
       
        int idDependencia=0;
                
        try{
            String sql="SELECT idCampus FROM campus WHERE nombreCampus='"+nombreDependencia+"'";
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
               
            while(rst.next()){
            
            idDependencia=rst.getInt("idCampus");
                  
            }      
         
        }catch(SQLException e){
        JOptionPane.showMessageDialog(null,"Error al Consultar idCarrera en la Base de Datos","ERROR"+e,JOptionPane.ERROR_MESSAGE);
        }
    return idDependencia;

    }
    public void obtenerDependencias(String nombreDependencia){
             
        
        try{
            
            DefaultComboBoxModel modelo=new DefaultComboBoxModel();  
            String datos[]=new String[1];
            String sql="SELECT nombreCampus FROM campus WHERE nombreCampus='"+nombreDependencia+"'";
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
            
            
            while(rst.next()){
            
            datos[0]=rst.getString("nombreCampus");
            modelo.addElement(datos[0]);
           
            }
            
            sql="SELECT nombreCampus FROM campus WHERE nombreCampus!='"+nombreDependencia+"'";
            PreparedStatement pst2= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst2 = pst2.executeQuery();
            while(rst2.next()){
            datos[0]=rst2.getString("nombreCampus");
            modelo.addElement(datos[0]);
            }
            comboPlantel.setModel(modelo);
            
        }catch(SQLException e){
        JOptionPane.showMessageDialog(null,"Error al Consultar dependencias en la Base de Datos"+e,"ERROR",JOptionPane.ERROR_MESSAGE);
        }
    

    } 
     
   public void obtenerDependencias(){
             
        
        try{
            
            DefaultComboBoxModel modelo=new DefaultComboBoxModel();  
            String datos[]=new String[1];
            String sql="SELECT nombreCampus FROM campus";
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
            
            
            while(rst.next()){
            
            datos[0]=rst.getString("nombreCampus");
            modelo.addElement(datos[0]);
           
            }
            
            comboPlantel.setModel(modelo);
            
        }catch(SQLException e){
        JOptionPane.showMessageDialog(null,"Error al dependencias en la Base de Datos"+e,"ERROR",JOptionPane.ERROR_MESSAGE);
        }
    

    }  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> comboBuscar;
    private javax.swing.JComboBox<String> comboCarrera;
    private javax.swing.JComboBox<String> comboPlantel;
    private javax.swing.JComboBox<String> comboSexo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblConsultar;
    private javax.swing.JTextField txtAmaterno;
    private javax.swing.JTextField txtApaterno;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtNoControl;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
